const mongoose = require('mongoose');
const User = require('../models/User');
const Post = require('../models/Post');
require('dotenv').config();

async function setupDatabase() {
  console.log('üöÄ Iniciando configura√ß√£o do banco de dados...\n');
  
  try {
    // 1. Testar conex√£o
    console.log('1Ô∏è‚É£ Testando conex√£o com MongoDB...');
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Conex√£o estabelecida com sucesso!\n');

    // 2. Verificar se o banco est√° vazio
    const userCount = await User.countDocuments();
    const postCount = await Post.countDocuments();
    
    console.log(`üìä Estado atual do banco:`);
    console.log(`   - Usu√°rios: ${userCount}`);
    console.log(`   - Posts: ${postCount}\n`);

    // 3. Criar usu√°rios se n√£o existirem
    if (userCount === 0) {
      console.log('üë• Criando usu√°rios iniciais...');
      
      const users = [
        {
          username: 'Livia Moura',
          password: '123456',
          role: 'professor'
        },
        {
          username: 'aluno1',
          password: '123456',
          role: 'aluno'
        }
      ];

      const createdUsers = [];
      for (const userData of users) {
        const user = new User(userData);
        const savedUser = await user.save();
        createdUsers.push(savedUser);
        console.log(`   ‚úÖ ${savedUser.username} (${savedUser.role})`);
      }
      console.log('');

      // 4. Criar posts iniciais se n√£o existirem
      if (postCount === 0) {
        console.log('üìù Criando posts iniciais...');
        
        const posts = [
          {
            title: "Introdu√ß√£o √† Matem√°tica",
            description: "Conceitos b√°sicos de matem√°tica para iniciantes. Nesta aula, abordaremos n√∫meros naturais, opera√ß√µes b√°sicas e resolu√ß√£o de problemas simples.",
            subject: "Matem√°tica",
            author: "Livia Moura",
            authorId: createdUsers[0]._id
          },
          {
            title: "Hist√≥ria do Brasil Colonial",
            description: "Estudo do per√≠odo colonial brasileiro, desde a chegada dos portugueses at√© a independ√™ncia. Abordaremos aspectos pol√≠ticos, econ√¥micos e sociais.",
            subject: "Hist√≥ria",
            author: "Livia Moura",
            authorId: createdUsers[0]._id
          },
          {
            title: "Fundamentos da F√≠sica",
            description: "Introdu√ß√£o aos conceitos fundamentais da f√≠sica: movimento, for√ßa, energia e suas aplica√ß√µes no cotidiano.",
            subject: "F√≠sica",
            author: "Livia Moura",
            authorId: createdUsers[0]._id
          }
        ];

        for (const postData of posts) {
          const post = new Post(postData);
          await post.save();
          console.log(`   ‚úÖ ${post.title} (${post.subject})`);
        }
        console.log('');
      }
    } else {
      console.log('‚ÑπÔ∏è Usu√°rios j√° existem no banco. Pulando cria√ß√£o...\n');
    }

    // 5. Verificar resultado final
    const finalUserCount = await User.countDocuments();
    const finalPostCount = await Post.countDocuments();
    
    console.log('üéâ Configura√ß√£o conclu√≠da!');
    console.log(`üìä Resultado final:`);
    console.log(`   - Usu√°rios: ${finalUserCount}`);
    console.log(`   - Posts: ${finalPostCount}`);
    console.log('');
    console.log('üîê Credenciais para teste:');
    console.log('   Professor: "Livia Moura" / "123456"');
    console.log('   Aluno: "aluno1" / "123456"');
    console.log('');
    console.log('üí° Para testar a API, execute: npm run dev');

  } catch (error) {
    console.error('‚ùå Erro durante a configura√ß√£o:', error.message);
    console.log('\nüîß Poss√≠veis solu√ß√µes:');
    console.log('1. Verifique se o MongoDB est√° rodando (docker-compose up)');
    console.log('2. Verifique se as vari√°veis do .env est√£o corretas');
    console.log('3. Verifique se a porta 27017 est√° dispon√≠vel');
  } finally {
    await mongoose.disconnect();
    console.log('\nüîå Conex√£o encerrada');
  }
}

setupDatabase();
